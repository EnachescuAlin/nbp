# No Bugs in Production (NBP)
# Copyright (C) 2019-present Alin Enachescu

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/|.

language: c
sudo: required

matrix:
  include:
    #
    # gcc
    #
    - os: linux
      env:
        - DESCRIPTION="linux gcc"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-5
            - gcc-6
            - gcc-7
            - gcc-8
            - gcc-9
            - lcov
      before_install:
        - gem install coveralls-lcov
      script:
        - cd build/LinuxMakefile

        # gcc 5
        - make clean
        - make all CC=gcc-5 COMPILER_FLAG=-DNBP_COMPILER_GCC SAMPLE_FLAGS=-DSAMPLE_DISABLE_SLEEP
        - ./run_tests.sh && ./run_coveralls.sh
        # gcc 6
        - make clean
        - make all CC=gcc-6 COMPILER_FLAG=-DNBP_COMPILER_GCC SAMPLE_FLAGS=-DSAMPLE_DISABLE_SLEEP
        - ./run_tests.sh
        # gcc 7
        - make clean
        - make all CC=gcc-7 COMPILER_FLAG=-DNBP_COMPILER_GCC SAMPLE_FLAGS=-DSAMPLE_DISABLE_SLEEP
        - ./run_tests.sh
        # gcc 8
        - make clean
        - make all CC=gcc-8 COMPILER_FLAG=-DNBP_COMPILER_GCC SAMPLE_FLAGS=-DSAMPLE_DISABLE_SLEEP
        - ./run_tests.sh
        # gcc 9
        - make clean
        - make all CC=gcc-9 COMPILER_FLAG=-DNBP_COMPILER_GCC SAMPLE_FLAGS=-DSAMPLE_DISABLE_SLEEP
        - ./run_tests.sh

    #
    # g++
    #
    - os: linux
      env:
        - DESCRIPTION="linux g++"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
            - g++-6
            - g++-7
            - g++-8
            - g++-9
            - lcov
      before_install:
        - gem install coveralls-lcov
      script:
        - cd build/LinuxMakefile

        # g++ 5
        - make clean
        - make all CC=g++-5 COMPILER_FLAG=-DNBP_COMPILER_GPP SAMPLE_FLAGS=-DSAMPLE_DISABLE_SLEEP
        - ./run_tests.sh && ./run_coveralls.sh
        # g++ 6
        - make clean
        - make all CC=g++-6 COMPILER_FLAG=-DNBP_COMPILER_GPP SAMPLE_FLAGS=-DSAMPLE_DISABLE_SLEEP
        - ./run_tests.sh
        # g++ 7
        - make clean
        - make all CC=g++-7 COMPILER_FLAG=-DNBP_COMPILER_GPP SAMPLE_FLAGS=-DSAMPLE_DISABLE_SLEEP
        - ./run_tests.sh
        # g++ 8
        - make clean
        - make all CC=g++-8 COMPILER_FLAG=-DNBP_COMPILER_GPP SAMPLE_FLAGS=-DSAMPLE_DISABLE_SLEEP
        - ./run_tests.sh
        # g++ 9
        - make clean
        - make all CC=g++-9 COMPILER_FLAG=-DNBP_COMPILER_GPP SAMPLE_FLAGS=-DSAMPLE_DISABLE_SLEEP
        - ./run_tests.sh

    #
    # clang
    #
    - os: linux
      env:
        - DESCRIPTION="linux clang"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-7
            - llvm-toolchain-xenial-8
          packages:
            - clang-7
            - clang-8
            - lcov
      before_install:
        - gem install coveralls-lcov
      script:
        - cd build/LinuxMakefile

        # clang 7
        - make clean
        - make all CC=clang-7 COMPILER_FLAG=-DNBP_COMPILER_CLANG SAMPLE_FLAGS=-DSAMPLE_DISABLE_SLEEP
        - ./run_tests.sh && ./run_coveralls.sh
        # clang 8
        - make clean
        - make all CC=clang-8 COMPILER_FLAG=-DNBP_COMPILER_CLANG SAMPLE_FLAGS=-DSAMPLE_DISABLE_SLEEP
        - ./run_tests.sh

    #
    # gcc9 sanitizers
    #
    - os: linux
      env:
        - DESCRIPTION="linux gcc-9 sanitizers"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-9
      script:
        - cd build/LinuxMakefile

        # address
        - make clean
        - make all CC=gcc-9 COMPILER_FLAG=-DNBP_COMPILER_GCC SAMPLE_FLAGS=-DSAMPLE_DISABLE_SLEEP GCOV_FLAGS= SANITIZERS="-fsanitize=address,pointer-compare,pointer-subtract"
        - ./run_tests.sh ASAN_OPTIONS="detect_invalid_pointer_pairs=1"
        - ./run_tests.sh ASAN_OPTIONS="detect_stack_use_after_return=1"

        # thread
        - make clean
        - make all CC=gcc-9 COMPILER_FLAG=-DNBP_COMPILER_GCC SAMPLE_FLAGS=-DSAMPLE_DISABLE_SLEEP GCOV_FLAGS= SANITIZERS="-fsanitize=thread"
        - ./run_tests.sh

        # leak
        - make clean
        - make all CC=gcc-9 COMPILER_FLAG=-DNBP_COMPILER_GCC SAMPLE_FLAGS=-DSAMPLE_DISABLE_SLEEP GCOV_FLAGS= SANITIZERS="-fsanitize=leak"
        - ./run_tests.sh

        # undefined behaviour
        - make clean
        - make all CC=gcc-9 COMPILER_FLAG=-DNBP_COMPILER_GCC SAMPLE_FLAGS=-DSAMPLE_DISABLE_SLEEP GCOV_FLAGS= SANITIZERS="-fsanitize=undefined,shift,integer-divide-by-zero,unreachable,vla-bound,null,return,signed-integer-overflow,bounds,bounds-strict,alignment,object-size,float-divide-by-zero,float-cast-overflow,nonnull-attribute,returns-nonnull-attribute,bool,enum,vptr,pointer-overflow,builtin -fuse-ld=gold"
        - ./run_tests.sh
